{
  "type": "object",
    "properties": {
      "service": {
        "type": "object",
        "description": "DC/OS service configuration properties",
        "properties": {
          "name": {
            "title": "Service name",
            "description": "The name of the service instance",
            "type": "string",
            "default": "geode"
          },
          "user": {
            "title": "User",
            "description": "The user that the service will run as.",
            "type": "string",
            "default": "root"
          },
          "mesos_api_version": {
            "description": "Configures the Mesos API version to use. Possible values: V0 (non-HTTP), V1 (HTTP)",
            "type": "string",
            "enum": ["V0", "V1"],
            "default": "V1"
          },
          "service_account": {
            "description": "The service account for DC/OS service authentication. This is typically left empty to use the default unless service authentication is needed. The value given here is passed as the principal of Mesos framework.",
            "type": "string",
            "default": ""
          },
          "virtual_network_enabled": {
            "description": "Enable virtual networking",
            "type": "boolean",
            "default": false
          },
          "virtual_network_name": {
            "description": "The name of the virtual network to join",
            "type": "string",
            "default": "dcos"
          },
          "virtual_network_plugin_labels": {
            "description": "Labels to pass to the virtual network plugin. Comma-separated key:value pairs. For example: k_0:v_0,k_1:v_1,...,k_n:v_n",
            "type": "string",
            "default": ""
          },
          "service_account_secret": {
            "title": "Credential secret name (optional)",
            "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
            "type": "string",
            "default": ""
          },
          "log_level": {
            "description": "The log level for the DC/OS service.",
            "type": "string",
            "enum": ["OFF", "FATAL", "ERROR", "WARN", "INFO", "DEBUG", "TRACE", "ALL"],
            "default": "INFO"
          }
        },
        "required":[
          "name",
          "user"
        ]
      },
      "locator": {
        "description": "Locator configuration properties",
        "type": "object",
        "properties": {
          "count": {
            "title": "Locator count",
            "description": "Number of Locators to run",
            "type": "integer",
            "default":2
          },
          "placement_constraint": {
            "title": "Placement constraint",
            "description": "Placement constraints for loctors. Example: [[\"hostname\", \"UNIQUE\"]]",
            "type": "string",
            "default": "[]",
            "media": {
              "type": "application/x-zone-constraints+json"
            }
          },
          "dockerimage": {
            "title": "Docker Image",
            "description": "The locator's docker image",
            "type": "string",
            "default":"digitalemil/mypublicrepo:geode-locator-v1.3.0"       
          },
          "cpus": {
            "title": "CPU count",
            "description": "Template pod CPU requirements",
            "type": "number",
            "default":0.25
          },
          "mem": {
            "title": "Memory size (MB)",
            "description": "Template pod mem requirements (in MB)",
            "type": "integer",
            "default":3072
          },
          "maxheap": {
            "title": "Maxheap (MB)",
            "description": "Maxheap (in MB)",
            "type": "integer",
            "default":2048
          },
          "disk": {
            "title": "Disk size (MB)",
            "description": "Template pod persistent disk requirements (in MB)",
            "type": "integer",
            "default":25
          },
          "disk_type": {
            "title": "Disk type [ROOT, MOUNT]",
            "description": "Mount volumes require preconfiguration in DC/OS",
            "enum": [
              "ROOT",
              "MOUNT"
            ],
            "default": "ROOT"
          }
        },
        "required":[
          "count",
          "cpus",
          "mem",
          "disk",
          "disk_type"
        ]
      },
      "server": {
        "description": "Server configuration properties",
        "type": "object",
        "properties": {
          "count": {
            "title": "Server count",
            "description": "Number of Servers to run",
            "type": "integer",
            "default":3
          },
          "placement_constraint": {
            "title": "Placement constraint",
            "description": "Placement constraints for servers. Example: [[\"hostname\", \"UNIQUE\"]]",
            "type": "string",
            "default": "[]",
            "media": {
              "type": "application/x-zone-constraints+json"
            }
          },
          "dockerimage": {
            "title": "Docker Image",
            "description": "The server's docker image",
            "type": "string",
            "default":"digitalemil/mypublicrepo:geode-server-v1.3.0"       
          },
          "cpus": {
            "title": "CPU count",
            "description": "Template pod CPU requirements",
            "type": "number",
            "default":0.25
          },
          "mem": {
            "title": "Memory size (MB)",
            "description": "Template pod mem requirements (in MB)",
            "type": "integer",
            "default":3072
          },
          "maxheap": {
            "title": "Maxheap (MB)",
            "description": "Maxheap (in MB)",
            "type": "integer",
            "default":2048
          },
          "disk": {
            "title": "Disk size (MB)",
            "description": "Template pod persistent disk requirements (in MB)",
            "type": "integer",
            "default":25
          },
          "disk_type": {
            "title": "Disk type [ROOT, MOUNT]",
            "description": "Mount volumes require preconfiguration in DC/OS",
            "enum": [
              "ROOT",
              "MOUNT"
            ],
            "default": "ROOT"
          }
        },
        "required":[
          "count",
          "cpus",
          "mem",
          "disk",
          "disk_type"
        ]
      },
      "pulse": {
        "description": "Pulse configuration properties",
        "type": "object",
        "properties": {
          "count": {
            "title": "Pulse count",
            "description": "Number of Servers to run",
            "type": "integer",
            "default":1
          },
          "port": {
            "title": "Pulse webserver port",
            "description": "Port of the webserver",
            "type": "integer",
            "default":9080
          },
          "shutdownport": {
            "title": "Pulse shutdown port",
            "description": "Shutdown port",
            "type": "integer",
            "default":9085
          },
          "role": {
            "title": "Mesos role",
            "description": "Mesos role for pulse. Default: slave_public",
            "type": "string",
            "default": "slave_public"
          },
          "dockerimage": {
            "title": "Docker Image",
            "description": "The pulses's docker image",
            "type": "string",
            "default":"digitalemil/mypublicrepo:geode-pulse-v1.3.0"       
          },
          "cpus": {
            "title": "CPU count",
            "description": "Template pod CPU requirements",
            "type": "number",
            "default":0.1
          },
          "mem": {
            "title": "Memory size (MB)",
            "description": "Template pod mem requirements (in MB)",
            "type": "integer",
            "default":1024
          }
        }
      },
      "defaultregion": {
        "description": "Region to create at startup",
        "type": "object",
        "properties": {
          "name": {
            "title": "Region name",
            "description": "Region name",
            "type": "string",
            "default":"default"
          },
          "type": {
            "title": "Region type",
            "description": "Region type",
            "type": "string",
            "default":"REPLICATE"
          }
        }
      }
    }
}
